swagger: "2.0"
info:
  description: "here is my customer service api documentation."
  version: "1.0.0"
  title: "Swagger customer"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/"
schemes:
- "http"
- "https"
paths:   
  /customers/add-customer:
    post:
      tags:
      - "customer"
      summary: "Add a new customer to the database"
      description: ""
      operationId: "add-customer"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Pet"
      responses:
        "405":
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /customers/login:
    post:
      tags:
      - "customer"
      summary: "Login customer"
      description: ""
      operationId: "login-customer"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Pet"
      responses:
        "405":
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /customers/update-customer/{id}:  
    put:
      tags:
      - "customer"
      summary: "Update an existing customer"
      description: ""
      operationId: "updateCustomer"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/Pet"
      responses:
        "400":
          description: ""
        "404":
          description: ""
        "405":
          description: ""
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /customers/deactivate-customer/{id}:  
    put:
      tags:
      - "customer"
      summary: "deactivate an existing customer"
      description: ""
      operationId: "deactivateCustomer"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Pet"
      responses:
        "400":
          description: ""
        "404":
          description: ""
        "405":
          description: ""
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /customers/get-customer/{id}:
    get:
      tags:
      - "customer"
      summary: "Find customer by ID"
      description: "Returns a single customer"
      operationId: "getUserByID"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Pet"
        "400":
          description: ""
        "404":
          description: ""
      security:
      - api_key: []